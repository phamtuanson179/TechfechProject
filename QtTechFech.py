# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Qt-tech-fech.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import tkinter.filedialog

from PyQt5 import QtCore, QtGui, QtWidgets
import pandas as pd
from tkinter import *



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        # set màn hình mainwindow
        MainWindow.setObjectName("mainWindow")
        MainWindow.resize(900, 700)

        #set don't know
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centerWidgets")
        MainWindow.setCentralWidget(self.centralwidget)

        #set tab main & help
        self.tabWidgetMain = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidgetMain.setGeometry(QtCore.QRect(0, 0, 900, 700))
        self.tabWidgetMain.setObjectName("mainTab")

        #set tab main
        self.tabMain = QtWidgets.QWidget()
        self.tabMain.setObjectName("tab")
        self.tabWidgetMain.addTab(self.tabMain, "")
        self.tabWidgetMain.setTabText(self.tabWidgetMain.indexOf(self.tabMain), "Main")

        # set depotButton
        self.depotButton = QtWidgets.QPushButton(self.tabMain)
        self.depotButton.setGeometry(QtCore.QRect(0, 120, 100, 40))
        self.depotButton.setObjectName("depotButton")
        self.depotButton.setText("Depots")
        self.depotButton.clicked.connect(self.loadExcelDepotDatas)

        # set table depot
        self.tableWidgetDepot = QtWidgets.QTableWidget(self.tabMain)
        self.tableWidgetDepot.setGeometry(QtCore.QRect(120, 30, 500, 401))
        self.tableWidgetDepot.setObjectName("tableWidgetOptimal")
        self.tableWidgetDepot.setVisible(False)

        # set button import excel depot data
        # self.buttonImportDepotData = QtWidgets.QPushButton(self.tabMain)
        # self.buttonImportDepotData.setGeometry(QtCore.QRect(650, 30, 30, 30))
        # self.buttonImportDepotData.setObjectName("buttonImportDepotData")
        # self.buttonImportDepotData.setVisible(False)
        # self.buttonImportDepotData.setIcon(QtGui.QIcon('./icon/import.png'))

        # set button add depot data
        # self.buttonAddDepotData = QtWidgets.QPushButton(self.tabMain)
        # self.buttonAddDepotData.setGeometry(QtCore.QRect(700, 30, 30, 30))
        # self.buttonAddDepotData.setObjectName("buttonAddDepotData")
        # self.buttonAddDepotData.setVisible(False)
        # self.buttonAddDepotData.setIcon(QtGui.QIcon('./icon/add.png'))
        # self.buttonAddDepotData.clicked.connect(self.addDepotData)

        # set customerButton
        self.customersButton = QtWidgets.QPushButton(self.tabMain)
        self.customersButton.setGeometry(QtCore.QRect(0, 180, 100, 40))
        self.customersButton.setObjectName("customersButton")
        self.customersButton.setText('Customers')
        self.customersButton.clicked.connect(self.loadExcelCustomerDatas)


        # set table customer
        self.tableWidgetCustomer = QtWidgets.QTableWidget(self.tabMain)
        self.tableWidgetCustomer.setGeometry(QtCore.QRect(120, 30, 500, 401))
        self.tableWidgetCustomer.setObjectName("tableWidgetOptimal")
        self.tableWidgetCustomer.setVisible(False)

        # set button import excel customer data
        # self.buttonImportCustomerData = QtWidgets.QPushButton(self.tabMain)
        # self.buttonImportCustomerData.setGeometry(QtCore.QRect(650, 30, 30, 30))
        # self.buttonImportCustomerData.setObjectName("buttonImportCustomerData")
        # self.buttonImportCustomerData.setVisible(False)
        # self.buttonImportCustomerData.setIcon(QtGui.QIcon('./icon/import.png'))

        # set button add customer data
        # self.buttonAddCustomerData = QtWidgets.QPushButton(self.tabMain)
        # self.buttonAddCustomerData.setGeometry(QtCore.QRect(700, 30, 30, 30))
        # self.buttonAddCustomerData.setObjectName("buttonAddCustomerData")
        # self.buttonAddCustomerData.setVisible(False)
        # self.buttonAddCustomerData.setIcon(QtGui.QIcon('./icon/add.png'))
        # self.buttonAddCustomerData.clicked.connect(self.addCustomerData)

        # self.buttonImportCustomerData.setText('Import Data')

        #set carButton
        self.carsButton = QtWidgets.QPushButton(self.tabMain)
        self.carsButton.setGeometry(QtCore.QRect(0, 240, 100, 40))
        self.carsButton.setObjectName("carsButton")
        self.carsButton.setText("Cars")
        self.carsButton.clicked.connect(self.loadExcelCarsDatas)


        # set table car
        self.tableWidgetCar = QtWidgets.QTableWidget(self.tabMain)
        self.tableWidgetCar.setGeometry(QtCore.QRect(120, 30, 500, 410))
        self.tableWidgetCar.setObjectName("tableWidgetOptimal")
        self.tableWidgetCar.setVisible(False)

        # set button import excel car data
        # self.buttonImportCarData = QtWidgets.QPushButton(self.tabMain)
        # self.buttonImportCarData.setGeometry(QtCore.QRect(650, 30, 30, 30))
        # self.buttonImportCarData.setObjectName("buttonImportCarData")
        # self.buttonImportCarData.setIcon(QtGui.QIcon('./icon/import.png'))
        # self.buttonImportCarData.setVisible(False)
        # self.buttonImportCarData.clicked.connect(self.openExcelCarData)



        # set button add car data
        # self.buttonAddCarData = QtWidgets.QPushButton(self.tabMain)
        # self.buttonAddCarData.setGeometry(QtCore.QRect(700, 30, 30, 30))
        # self.buttonAddCarData.setObjectName("buttonAddCarData")
        # self.buttonAddCarData.setVisible(False)
        # self.buttonAddCarData.setIcon(QtGui.QIcon('./icon/add.png'))
        # self.buttonAddCarData.clicked.connect(self.addCarData)

        #set tab widget config
        self.tabWidgetConfig = QtWidgets.QTabWidget(self.tabMain)
        self.tabWidgetConfig.setGeometry(QtCore.QRect(0, 450, 900, 201))
        self.tabWidgetConfig.setObjectName("tabConfig")

        #set tab optimal
        self.tabOptimal = QtWidgets.QWidget()
        self.tabOptimal.setObjectName("tabOptimal")
        self.tabWidgetConfig.addTab(self.tabOptimal, "")
        self.tabWidgetConfig.setTabText(self.tabWidgetConfig.indexOf(self.tabOptimal), "Optimal")

        #set result
        self.tabResult = QtWidgets.QWidget()
        self.tabResult.setObjectName("tabResult")
        self.tabWidgetConfig.addTab(self.tabResult, "")
        self.tabWidgetConfig.setTabText(self.tabWidgetConfig.indexOf(self.tabResult), "Result")

        #set tab help
        self.tabHelp = QtWidgets.QWidget()
        self.tabHelp.setObjectName("tab_2")
        self.tabWidgetMain.addTab(self.tabHelp, "")
        self.tabWidgetMain.setTabText(self.tabWidgetMain.indexOf(self.tabHelp), "Help")

        # self.retranslateUi(MainWindow)
        self.tabWidgetMain.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


    # def retranslateUi(self, MainWindow):
    #     _translate = QtCore.QCoreApplication.translate
    #     MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
    #     self.depotButton.setText(_translate("MainWindow", "Kho"))
    #     self.carsButton.setText(_translate("MainWindow", "Đội xe"))
    #     self.customersButton.setText(_translate("MainWindow", "Khách hàng"))
    #     self.buttonImportCustomerData.setText(_translate("MainWindow", "Import data"))
    #     self.tabWidgetConfig.setTabText(self.tabWidgetConfig.indexOf(self.tabOptimal), _translate("MainWindow", "Optimal"))
    #     self.tabWidgetConfig.setTabText(self.tabWidgetConfig.indexOf(self.tabResult), _translate("MainWindow", "Result"))
    #     self.tabWidgetMain.setTabText(self.tabWidgetMain.indexOf(self.tabMain), _translate("MainWindow", "Main"))
    #     self.tabWidgetMain.setTabText(self.tabWidgetMain.indexOf(self.tabHelp), _translate("MainWindow", "Help"))

    def setVisibleCarData(self, isVisible):
        self.tableWidgetCar.setVisible(isVisible)
        # self.buttonImportCarData.setVisible(isVisible)
        # self.buttonAddCarData.setVisible(isVisible)
        if(isVisible):
            self.carsButton.setStyleSheet('background-color: #4285f4; color: #ffffff ;border: 0')
        else:
            self.carsButton.setStyleSheet('background-color: #ffffff, color: #000000')

    def setVisibleDepotData(self, isVisible):
        self.tableWidgetDepot.setVisible(isVisible)
        # self.buttonImportDepotData.setVisible(isVisible)
        # self.buttonAddDepotData.setVisible(isVisible)
        if (isVisible):
            self.depotButton.setStyleSheet('background-color: #4285f4; color: #ffffff; border: 0')
        else:
            self.depotButton.setStyleSheet('background-color: #ffffff, color: #000000')

    def setVisibleCustomerData(self, isVisible):
        self.tableWidgetCustomer.setVisible(isVisible)
        # self.buttonImportCustomerData.setVisible(isVisible)
        # self.buttonAddCustomerData.setVisible(isVisible)
        if (isVisible):
            self.customersButton.setStyleSheet('background-color: #4285f4; color: #ffffff; border: 0')
        else:
            self.customersButton.setStyleSheet('background-color: #ffffff, color: #000000')



    def loadExcelDepotDatas(self):
        self.setVisibleDepotData(True)
        self.setVisibleCustomerData(False)
        self.setVisibleCarData(False)
        # hàm đọc file excel
        df = pd.read_excel(excel_file_path_depot)
        if df.size == 0:
            return

        self.tableWidgetDepot.setRowCount(df.shape[0])
        self.tableWidgetDepot.setColumnCount(df.shape[1])
        self.tableWidgetDepot.setHorizontalHeaderLabels(df.columns)

        for row in df.iterrows():
            print(row)
            values = row[1];
            for col_index,value in enumerate(values):
                # if isinstance(value, (float,int )):
                    # value = '{0:0,.0f}'.format(value)
                tableItem = QtWidgets.QTableWidgetItem(str(value))
                self.tableWidgetDepot.setItem(row[0],col_index, tableItem)

    def loadExcelCarsDatas(self):
        self.setVisibleDepotData(False)
        self.setVisibleCustomerData(False)
        self.setVisibleCarData(True)
        # hàm đọc file excel
        df = pd.read_excel(excel_file_path_car)
        if df.size == 0:
            return

        self.tableWidgetCar.setRowCount(df.shape[0])
        self.tableWidgetCar.setColumnCount(df.shape[1])
        self.tableWidgetCar.setHorizontalHeaderLabels(df.columns)

        for row in df.iterrows():
            print(row)
            values = row[1];
            for col_index, value in enumerate(values):
                # if isinstance(value, (float,int )):
                # value = '{0:0,.0f}'.format(value)
                tableItem = QtWidgets.QTableWidgetItem(str(value))
                self.tableWidgetCar.setItem(row[0], col_index, tableItem)

    def loadExcelCustomerDatas(self):
        self.setVisibleDepotData(False)
        self.setVisibleCustomerData(True)
        self.setVisibleCarData(False)
        # hàm đọc file excel
        df = pd.read_excel(excel_file_path_customer)
        if df.size == 0:
            return

        self.tableWidgetCustomer.setRowCount(df.shape[0])
        self.tableWidgetCustomer.setColumnCount(df.shape[1])
        self.tableWidgetCustomer.setHorizontalHeaderLabels(df.columns)

        for row in df.iterrows():
            print(row)
            values = row[1];
            for col_index, value in enumerate(values):
                # if isinstance(value, (float,int )):
                # value = '{0:0,.0f}'.format(value)
                tableItem = QtWidgets.QTableWidgetItem(str(value))
                self.tableWidgetCustomer.setItem(row[0], col_index, tableItem)
    #
    # def addDepotData(self):
    #     self.dialogAddDepotData = QtWidgets.QDialog(self.tabMain)
    #     self.dialogAddDepotData.setWindowTitle('Add Depot Data')
    #     self.dialogAddDepotData.setFixedSize(QtCore.QSize(240, 120))
    #     buttonCancel = QtWidgets.QPushButton('Cancel', self.dialogAddDepotData)
    #     buttonCancel.setGeometry(QtCore.QRect(90, 90, 40, 20))
    #     buttonCancel.setStyleSheet('border: 1px solid #000000')
    #
    #     buttonOk = QtWidgets.QPushButton('Ok', self.dialogAddDepotData)
    #     buttonOk.setGeometry(QtCore.QRect(140, 90, 30, 20))
    #     buttonOk.setStyleSheet('background-color: #4285f4; color: #ffffff; border: 0')
    #
    #     self.lableNameDepot = QtWidgets.QLabel('Name : ', self.dialogAddDepotData)
    #     self.lableNameDepot.setGeometry(QtCore.QRect(20, 10, 40, 20))
    #     self.inputNameDepot = QtWidgets.QLineEdit(self.dialogAddDepotData)
    #     self.inputNameDepot.setGeometry(QtCore.QRect(90, 10, 100, 20))
    #
    #     self.lableLongDepot = QtWidgets.QLabel('Long : ', self.dialogAddDepotData)
    #     self.lableLongDepot.setGeometry(QtCore.QRect(20, 35, 40, 20))
    #     self.inputLongDepot = QtWidgets.QLineEdit(self.dialogAddDepotData)
    #     self.inputLongDepot.setGeometry(QtCore.QRect(90, 35, 100, 20))
    #
    #     self.lableLatDepot = QtWidgets.QLabel('Lat : ', self.dialogAddDepotData)
    #     self.lableLatDepot.setGeometry(QtCore.QRect(20, 60, 40, 20))
    #     self.inputLatDepot = QtWidgets.QLineEdit(self.dialogAddDepotData)
    #     self.inputLatDepot.setGeometry(QtCore.QRect(90, 60, 100, 20))
    #
    #     self.dialogAddDepotData.exec()
    #
    # def addCustomerData(self):
    #     self.dialogAddCustomerData = QtWidgets.QDialog(self.tabMain)
    #     self.dialogAddCustomerData.setWindowTitle('Add Customer Data')
    #     self.dialogAddCustomerData.setFixedSize(QtCore.QSize(240, 120))
    #     buttonCancel = QtWidgets.QPushButton('Cancel', self.dialogAddCustomerData)
    #     buttonCancel.setGeometry(QtCore.QRect(90, 90, 40, 20))
    #     buttonCancel.setStyleSheet('border: 1px solid #000000')
    #
    #     buttonOk = QtWidgets.QPushButton('Ok', self.dialogAddCustomerData)
    #     buttonOk.setGeometry(QtCore.QRect(140, 90, 30, 20))
    #     buttonOk.setStyleSheet('background-color: #4285f4; color: #ffffff; border: 0')
    #
    #     self.lableNameCustomer = QtWidgets.QLabel('Name : ', self.dialogAddCustomerData)
    #     self.lableNameCustomer.setGeometry(QtCore.QRect(20, 10, 40, 20))
    #     self.inputNameCustomer = QtWidgets.QLineEdit(self.dialogAddCustomerData)
    #     self.inputNameCustomer.setGeometry(QtCore.QRect(90, 10, 100, 20))
    #
    #     self.lableLongCustomer = QtWidgets.QLabel('Long : ', self.dialogAddCustomerData)
    #     self.lableLongCustomer.setGeometry(QtCore.QRect(20, 35, 40, 20))
    #     self.inputLongCustomer = QtWidgets.QLineEdit(self.dialogAddCarData)
    #     self.inputLongCustomer.setGeometry(QtCore.QRect(90, 35, 100, 20))
    #
    #     self.lableLatCustomer = QtWidgets.QLabel('Lat : ', self.dialogAddCustomerData)
    #     self.lableLatCustomer.setGeometry(QtCore.QRect(20, 60, 40, 20))
    #     self.inputLatCustomer = QtWidgets.QLineEdit(self.dialogAddCustomerData)
    #     self.inputLatCustomer.setGeometry(QtCore.QRect(90, 60, 100, 20))
    #
    #     self.dialogAddCustomerData.exec()
    #
    # def addCarData(self):
    #     self.dialogAddCarData = QtWidgets.QDialog(self.tabMain)
    #     self.dialogAddCarData.setWindowTitle('Add Car data')
    #     self.dialogAddCarData.setFixedSize(QtCore.QSize(240, 120))
    #     buttonCancel = QtWidgets.QPushButton('Cancel', self.dialogAddCarData)
    #     buttonCancel.setGeometry(QtCore.QRect(90, 90, 40, 20))
    #     buttonCancel.setStyleSheet('border: 1px solid #000000')
    #
    #     buttonOk = QtWidgets.QPushButton('Ok', self.dialogAddCarData)
    #     buttonOk.setGeometry(QtCore.QRect(140, 90, 30, 20))
    #     buttonOk.setStyleSheet('background-color: #4285f4; color: #ffffff; border: 0')
    #
    #     self.lableTypeCar = QtWidgets.QLabel('Type : ', self.dialogAddCarData)
    #     self.lableTypeCar.setGeometry(QtCore.QRect(20, 10, 40, 20))
    #     self.inputTypeCar = QtWidgets.QLineEdit(self.dialogAddCarData)
    #     self.inputTypeCar.setGeometry(QtCore.QRect(90, 10, 100, 20))
    #
    #     self.lableWeightCar = QtWidgets.QLabel('Weight : ', self.dialogAddCarData)
    #     self.lableWeightCar.setGeometry(QtCore.QRect(20, 35, 40, 20))
    #     self.inputWeightCar = QtWidgets.QLineEdit(self.dialogAddCarData)
    #     self.inputWeightCar.setGeometry(QtCore.QRect(90, 35, 100, 20))
    #
    #     self.lableSpeedCar = QtWidgets.QLabel('Speed : ', self.dialogAddCarData)
    #     self.lableSpeedCar.setGeometry(QtCore.QRect(20, 60, 40, 20))
    #     self.inputWeightCar = QtWidgets.QLineEdit(self.dialogAddCarData)
    #     self.inputWeightCar.setGeometry(QtCore.QRect(90, 60, 100, 20))
    #
    #     self.dialogAddCarData.exec()

    # def openExcelCarData(self):
    #     fileExcelCarData = tkinter.filedialog.askopenfilename(initialdir = "/",
    #                                                         title = "Select a File",
    #                                                         filetypes = (("Text files",
    #                                                                  "*.txt*"),
    #                                                                  ("all files",
    #                                                                     "*.*")))
    #     self.loadExcelCarsDatas(fileExcelCarData)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    excel_file_path_car = 'carsDataTest.xlsx';
    excel_file_path_customer = 'customerDataTest.xlsx'
    excel_file_path_depot = 'depotDataTest.xlsx'
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
